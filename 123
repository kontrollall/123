-- Serviços
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer

-- Função para garantir que sempre temos o HumanoidRootPart
local function getRoot()
	local character = player.Character or player.CharacterAdded:Wait()
	return character:WaitForChild("HumanoidRootPart")
end

-- GUI Wizard
local Library = assert(loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard")))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Script")

-- Locais para teleport
local locations = {
    {Name = "Spawn", Position = Vector3.new(196, 54, -102)},
    {Name = "Fried Potato", Position = Vector3.new(-47, 1023, 93)},
    {Name = "Knockout", Position = Vector3.new(196, 91, -93)},
    {Name = "Rope", Position = Vector3.new(726, 197, 9223)},
}

local selectedLocationIndex = 1

-- Dropdown de teleport
Section:CreateDropdown("Select Location", (function()
    local names = {}
    for _, loc in ipairs(locations) do
        table.insert(names, loc.Name)
    end
    return names
end)(), 1, function(selected)
    for i, loc in ipairs(locations) do
        if loc.Name == selected then
            selectedLocationIndex = i
            print("Local selecionado:", loc.Name)
            break
        end
    end
end)

-- Botão para teleportar
Section:CreateButton("Teleport to Location", function()
    local rootPart = getRoot()
    local loc = locations[selectedLocationIndex]
    if loc and rootPart then
        rootPart.CFrame = CFrame.new(loc.Position + Vector3.new(0, 5, 0))
        print("Teleportado para:", loc.Name)
    else
        warn("Não foi possível teleportar.")
    end
end)

-- Toggle: Auto Minigames
local tempBind = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("TemporaryReachedBindable")
local autoMinigamesEnabled = false

Section:CreateToggle("Auto Minigames", function(state)
    autoMinigamesEnabled = state
    if state then
        task.spawn(function()
            while autoMinigamesEnabled do
                local args = {
                    {
                        GameQTE = true
                    }
                }
                tempBind:FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)

-- Toggle: Auto Skip
local dialogueRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("DialogueRemote")
local autoSkipEnabled = false

Section:CreateToggle("Auto Skip", function(state)
    autoSkipEnabled = state
    if state then
        task.spawn(function()
            while autoSkipEnabled do
                local args = { "Skipped" }
                dialogueRemote:FireServer(unpack(args))
                task.wait(0.2)
            end
        end)
    end
end)
